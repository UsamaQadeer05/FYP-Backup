//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PHP_FYP_API.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PHP_FYPEntities : DbContext
    {
        public PHP_FYPEntities()
            : base("name=PHP_FYPEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tb_Allergies> tb_Allergies { get; set; }
        public virtual DbSet<tb_Diseases> tb_Diseases { get; set; }
        public virtual DbSet<tb_Medications> tb_Medications { get; set; }
        public virtual DbSet<tb_Symptoms> tb_Symptoms { get; set; }
        public virtual DbSet<tb_User_Allergies> tb_User_Allergies { get; set; }
        public virtual DbSet<tb_User_Diseases> tb_User_Diseases { get; set; }
        public virtual DbSet<tb_User_Medications> tb_User_Medications { get; set; }
        public virtual DbSet<tb_User_Social_History> tb_User_Social_History { get; set; }
        public virtual DbSet<tb_User_Symptoms> tb_User_Symptoms { get; set; }
        public virtual DbSet<tb_User_Vaccinations> tb_User_Vaccinations { get; set; }
        public virtual DbSet<tb_User_Vitals> tb_User_Vitals { get; set; }
        public virtual DbSet<tb_Users> tb_Users { get; set; }
        public virtual DbSet<tb_Vaccination> tb_Vaccination { get; set; }
    
        public virtual ObjectResult<CITYPIECHART_Result> CITYPIECHART(string cITYNAME)
        {
            var cITYNAMEParameter = cITYNAME != null ?
                new ObjectParameter("CITYNAME", cITYNAME) :
                new ObjectParameter("CITYNAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CITYPIECHART_Result>("CITYPIECHART", cITYNAMEParameter);
        }
    
        public virtual ObjectResult<COUNTRYPIECHART_Result> COUNTRYPIECHART()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<COUNTRYPIECHART_Result>("COUNTRYPIECHART");
        }
    
        public virtual ObjectResult<COUNTRYPIECHARTS_Result> COUNTRYPIECHARTS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<COUNTRYPIECHARTS_Result>("COUNTRYPIECHARTS");
        }
    
        public virtual ObjectResult<CITYPIECHARTS_Result> CITYPIECHARTS(string cITYNAME)
        {
            var cITYNAMEParameter = cITYNAME != null ?
                new ObjectParameter("CITYNAME", cITYNAME) :
                new ObjectParameter("CITYNAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CITYPIECHARTS_Result>("CITYPIECHARTS", cITYNAMEParameter);
        }
    
        public virtual ObjectResult<CITYPIECHARTSS_Result> CITYPIECHARTSS(string cITYNAME)
        {
            var cITYNAMEParameter = cITYNAME != null ?
                new ObjectParameter("CITYNAME", cITYNAME) :
                new ObjectParameter("CITYNAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CITYPIECHARTSS_Result>("CITYPIECHARTSS", cITYNAMEParameter);
        }
    }
}
